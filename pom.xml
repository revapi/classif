<?xml version="1.0" encoding="UTF-8"?>
<!--

    Copyright 2018 Lukas Krejci
    and other contributors as indicated by the @author tags.

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

        http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.

-->
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>org.revapi</groupId>
        <artifactId>revapi-build</artifactId>
        <version>36</version>
    </parent>

    <groupId>org.revapi.classif</groupId>
    <artifactId>classif</artifactId>
    <version>0.1.0-SNAPSHOT</version>

    <name>Classif</name>
    <description>Structural search on Java classes</description>
    <url>https://github.com/revapi/classif</url>

    <properties>
        <automatic.module.name>org.revapi.classif</automatic.module.name>
    </properties>

    <dependencies>
        <dependency>
            <groupId>org.antlr</groupId>
            <artifactId>antlr4-runtime</artifactId>
            <version>4.7.1</version>
        </dependency>

        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-engine</artifactId>
            <version>5.1.0</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-api</artifactId>
            <version>5.1.0</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-params</artifactId>
            <version>5.1.0</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.revapi.testjars</groupId>
            <artifactId>testjars-junit5</artifactId>
            <version>0.1.0</version>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <!-- This is a workaround until maven-compiler-plugin can ignore the - -release parameter if the JDK
                     to be run doesn't support it. This old version of the compiler plugin doesn't even know
                     maven.compiler.release.

                     Unfortunately, we can't build on Java9 because surefire in combination with JUnit5 and/or the use
                     javax.lang.model (from java.compiler module) in our tests causes some serious fits.
                -->
                <artifactId>maven-compiler-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.jacoco</groupId>
                <artifactId>jacoco-maven-plugin</artifactId>
                <configuration>
                    <excludes>
                        <exclude>org/revapi/classif/ClassifBaseListener*</exclude>
                        <exclude>org/revapi/classif/ClassifBaseVisitor*</exclude>
                        <exclude>org/revapi/classif/ClassifLexer*</exclude>
                        <exclude>org/revapi/classif/ClassifParser*</exclude>
                        <exclude>org/revapi/classif/ClassifVisitor*</exclude>
                        <exclude>org/revapi/classif/ClassifListener*</exclude>
                        <exclude>org/revapi/classif/ClassifParser$*</exclude>
                    </excludes>
                </configuration>
            </plugin>
            <plugin>
                <artifactId>maven-checkstyle-plugin</artifactId>
                <configuration>
                    <!-- exclude the generated-sources from checkstyle -->
                    <sourceDirectories>${project.build.sourceDirectory}</sourceDirectories>
                </configuration>
            </plugin>
            <plugin>
                <groupId>com.mycila</groupId>
                <artifactId>license-maven-plugin</artifactId>
                <configuration>
                    <mapping>
                        <g4>SLASHSTAR_STYLE</g4>
                    </mapping>
                </configuration>
            </plugin>
            <plugin>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>2.22.0</version>
                <dependencies>
                    <dependency>
                        <groupId>org.junit.platform</groupId>
                        <artifactId>junit-platform-surefire-provider</artifactId>
                        <version>1.2.0</version>
                    </dependency>
                    <dependency>
                        <!-- to get around bug https://github.com/junit-team/junit5/issues/1367 -->
                        <groupId>org.apache.maven.surefire</groupId>
                        <artifactId>surefire-logger-api</artifactId>
                        <version>2.21.0</version>
                    </dependency>
                </dependencies>
            </plugin>
            <plugin>
                <artifactId>maven-enforcer-plugin</artifactId>
                <executions>
                    <execution>
                        <id>common-checks</id>
                        <goals>
                            <goal>enforce</goal>
                        </goals>
                        <configuration>
                            <rules>
                                <requireJavaVersion>
                                    <version>1.8</version>
                                </requireJavaVersion>
                            </rules>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.antlr</groupId>
                <artifactId>antlr4-maven-plugin</artifactId>
                <version>4.7.1</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>antlr4</goal>
                        </goals>
                        <configuration>
                            <visitor>true</visitor>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <!-- make everything Antlr generates package-private.. There is no option to do that using
                 antlr itself, hence this hack -->
            <plugin>
                <groupId>com.google.code.maven-replacer-plugin</groupId>
                <artifactId>maven-replacer-plugin</artifactId>
                <version>1.4.1</version>
                <executions>
                    <execution>
                        <phase>process-sources</phase>
                        <goals>
                            <goal>replace</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <includes>
                        <include>target/generated-sources/antlr4/**/*.java</include>
                    </includes>
                    <variableTokenValueMap>
                        public class=class,public interface=interface
                    </variableTokenValueMap>
                </configuration>
            </plugin>
            <plugin>
                <artifactId>maven-release-plugin</artifactId>
                <configuration>
                    <releaseProfiles>release,release-profile</releaseProfiles>
                    <pushChanges>false</pushChanges>
                    <preparationGoals>clean verify</preparationGoals>
                </configuration>
            </plugin>
        </plugins>
    </build>

    <inceptionYear>2018</inceptionYear>

    <licenses>
        <license>
            <name>Apache License, Version 2.0</name>
            <url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>
            <distribution>repo</distribution>
        </license>
    </licenses>

    <organization>
        <name>Lukas Krejci</name>
        <url>http://lukas.krejci.pw</url>
    </organization>

    <developers>
        <developer>
            <name>Lukas Krejci</name>
            <email>lukas@krejci.pw</email>
            <url>http://lukas.krejci.pw</url>
            <timezone>+1</timezone>
        </developer>
    </developers>

    <issueManagement>
        <system>github-issues</system>
        <url>https://github.com/revapi/classif/issues</url>
    </issueManagement>


    <scm>
        <connection>scm:git:git://github.com/revapi/classif.git</connection>
        <developerConnection>scm:git:ssh://git@github.com/revapi/classif.git</developerConnection>
        <url>https://github.com/revapi/classif</url>
        <tag>HEAD</tag>
    </scm>

    <distributionManagement>
        <repository>
            <id>ossrh</id>
            <url>https://oss.sonatype.org/service/local/staging/deploy/maven2/</url>
        </repository>
    </distributionManagement>
</project>
